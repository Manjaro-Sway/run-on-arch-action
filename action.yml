name: 'Run on architecture'
branding:
  icon: 'cpu'
  color: 'green'
description: 'Run commands in a container with a specific CPU architecture'
author: 'Umberto Raimondi, Elijah Shaw-Rutschman, Jonas Strassel'
inputs:
  platform:
    description: 'docker platform supported by qemu and the machine this actions runs on (sth like "linux/amd64" or "linux/arm64")'
    required: false
    default: 'linux/arm64'
  image:
    description: 'docker image used as base - needs to support the given platform'
    required: false
    default: 'ubuntu:20.04'
  githubToken:
    description: 'Your GitHub token, used for caching Docker images in your project''s public package registry. Usually this would just be $\{{ github.token }}. This speeds up builds and is highly recommended.'
    required: true
    default: ''
  env:
    description: 'Environment variables to propagate to the container. YAML, but must begin with a | character. These variables will be available in both run and setup.'
    required: false
    default: ''
  run:
    description: 'Shell commands to execute in the container.'
    required: true
  shell:
    description: 'The shell to run commands with in the container.'
    required: false
    default: 'bash'
  dockerRunArgs:
    description: 'Additional arguments to pass to docker run, such as volume mappings. See README for example usage.'
    required: false
  setup:
    description: 'Shell commands to execute on the host before running the container, such as creating directories for volume mappings. See README for example usage.'
    required: false
    default: ''
  install:
    description: 'Shell commands to execute in the container as part of docker build, such as installing dependencies. This speeds up subsequent builds if githubToken is also used, but note that the image layer will be publicly available in your projects GitHub Package Registry, so make sure the resulting image does not have any secrets cached in logs or state.'
    required: false
    default: ''

runs:
  using: 'node12'
  main: 'dist/index.js'
